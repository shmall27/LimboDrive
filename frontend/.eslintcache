[{"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/index.js":"1","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/FileUI.js":"2","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/UploadForm.js":"3","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Login.js":"4","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Signup.js":"5","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/SignUp.js":"6","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/App.js":"7","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Home.js":"8","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/RoomSelection.js":"9","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Room.js":"10","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/DirName.js":"11","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/hooks/useOnClickOutside.js":"12","/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/hooks/useKeyPress.js":"13"},{"size":152,"mtime":1612041815828,"results":"14","hashOfConfig":"15"},{"size":1428,"mtime":1610651986308,"results":"16","hashOfConfig":"15"},{"size":2296,"mtime":1613257638963,"results":"17","hashOfConfig":"15"},{"size":1454,"mtime":1612899126121,"results":"18","hashOfConfig":"15"},{"size":440,"mtime":1610651874344,"results":"19","hashOfConfig":"15"},{"size":1326,"mtime":1611095112831,"results":"20","hashOfConfig":"15"},{"size":474,"mtime":1613230668752,"results":"21","hashOfConfig":"15"},{"size":336,"mtime":1612044911027,"results":"22","hashOfConfig":"15"},{"size":2147,"mtime":1613182480169,"results":"23","hashOfConfig":"15"},{"size":1024,"mtime":1613259965113,"results":"24","hashOfConfig":"15"},{"size":3103,"mtime":1613262654576,"results":"25","hashOfConfig":"15"},{"size":1106,"mtime":1613255385466,"results":"26","hashOfConfig":"15"},{"size":1020,"mtime":1613255352906,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"u76372",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/index.js",[],["56","57"],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/FileUI.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/UploadForm.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Login.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Signup.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/SignUp.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/App.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Home.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/RoomSelection.js",["58"],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/Room.js",["59","60"],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/components/DirName.js",["61","62","63"],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/hooks/useOnClickOutside.js",[],"/Users/samhall/Documents/GitHub/LimboDrive/frontend/src/hooks/useKeyPress.js",["64"],"// hook from https://usehooks.com/useKeyPress/\nimport { useState, useEffect } from 'react';\n\n// Hook\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n\nexport default useKeyPress;\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":6,"column":13,"nodeType":"71","endLine":21,"endColumn":4},{"ruleId":"69","severity":1,"message":"70","line":13,"column":13,"nodeType":"71","endLine":29,"endColumn":4},{"ruleId":"69","severity":1,"message":"72","line":29,"column":6,"nodeType":"73","endLine":29,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":18,"column":22,"nodeType":"77","messageId":"78","endLine":18,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":49,"column":24,"nodeType":"77","messageId":"78","endLine":49,"endColumn":26},{"ruleId":"69","severity":1,"message":"79","line":73,"column":6,"nodeType":"73","endLine":73,"endColumn":18,"suggestions":"80"},{"ruleId":"69","severity":1,"message":"81","line":32,"column":6,"nodeType":"73","endLine":32,"endColumn":8,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dirID'. Either include it or remove the dependency array.","ArrayExpression",["85"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'inputValue', 'isInputActive', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["86"],"React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [dirID]",{"range":"94","text":"95"},"Update the dependencies array to be: [enter, esc, inputValue, isInputActive, props]",{"range":"96","text":"97"},"Update the dependencies array to be: [downHandler, upHandler]",{"range":"98","text":"99"},[710,712],"[dirID]",[2241,2253],"[enter, esc, inputValue, isInputActive, props]",[894,896],"[downHandler, upHandler]"]